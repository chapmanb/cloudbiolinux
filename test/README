Integration test for CloudBioLinux.

When you have a base install running, you only need to supply the
(local) IP addrees of the VM, and the password-less key for the 
install user (who has sudo bash). The tests get invoked wiht

  ./test_biolinux [-i key.pub] [-u user] IPaddr [Flavor]

For further options see

  ./test_biolinux --help

Alternatively try the self running test using Virtualbox and Vagrant
with:

  ./test_vagrant --help

== Testing issues with Vagrant ==

The test system depends on a stack of tools, including virtualbox,
vagrant, ssh, ruby and related libraries. Things can go wrong. Here we
list a number of common problems.

=== Error with ssh config ===

The test system appends login code to enter a running vagrant
virtualbox without asking for a password. Sometimes the contents of
$HOME/.ssh/config get corrupted.  Check the contents out, and remove
all wrong information with

  vi ~/.ssh/config

and rerun the test.

=== Error suggests 'vagrant up' ===

If something went wrong with the install, Vagrant may complain that
you need to run 'vagrant up' first. In practise, this may mean:

* Remove other running vagrant instances (vagrant halt)
* Remove an existing (faulty) instance using virtualbox
* Check ~/.ssh/config contains no faulty lines
* Rerun the tests from scratch, i.e. without the '--continue' switch

=== Fatal error: Name lookup failed for vagrant

Probably there is another VirtualBox + vagrant running somewhere. This
conflicts with the information in ./ssh/config. Easy solution: remove
and kill the running instance first.

=== Error: ffi.rb:106:in `call_and_check': Error in API call to get_state ===

This is Ruby trying into the vagrant API. You need to reinstall the
vagrant and virtualbox gems to match your version of Ruby.

=== Grub error

On a kernel upgrade, the test scripts may want to install grub, which is
the boot loader. Vagrant does not need that, so don't try to install (select 
ignore).
